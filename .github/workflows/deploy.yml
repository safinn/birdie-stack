name: 🚀 Deploy

env:
  ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

on:
  push:
    branches:
      - main
      - dev
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: ⬣ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔬 Lint
        run: npm run lint

  typecheck:
    name: ʦ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1
        with:
          useLockFile: false

      - name: 🔎 Type check
        run: npm run typecheck --if-present

  build:
    name: 🐳 Build
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build-image.outputs.imageid }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          role-to-assume: arn:aws:iam:::role/github-actions-role
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1.6.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Build and push
        id: build-image
        uses: docker/build-push-action@v4.0.0
        with:
          platforms: linux/arm64
          push: true
          tags: ${{ steps.ecr-login.outputs.registry }}/${{ env.ENVIRONMENT }}-birdie-stack:latest

  deploy:
    name: 🚀 Deploy
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [lint, typecheck, build]
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2.0.0
        with:
          role-to-assume: arn:aws:iam:::role/github-actions-role
          aws-region: eu-west-1

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition ${{ env.ENVIRONMENT }}-birdie-stack-task --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: ${{ env.ENVIRONMENT }}-birdie-stack-task
          image: ${{ steps.build-image.outputs.imageid }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: birdie-stack
          cluster: ${{ env.ENVIRONMENT }}-birdie-stack-ecs-cluster"
          wait-for-service-stability: true
